/* eslint-disable no-console */


<%=_.union(extension('webpack-config.*', 'imports').filter(v => v.trim() != '')).join('\n')%>


const isProd = process.env.NODE_ENV === 'production';
const isDebug = process.env.NODE_ENV === 'debug';
const isDist = isDebug || isProd ? '.min' : '';
const distPath = path.join(__dirname, 'dist');
const showConfigOnly = '1' === process.env.SHOW_CONFIG_ONLY || 'true' === process.env.SHOW_CONFIG_ONLY;

const config = {

    entry: <%=extension('webpack-config.*', 'entry').filter(v => v.trim() != '')[0] || {}%>,
    output: <%=extension('webpack-config.*', 'output').filter(v => v.trim() != '')[0] || {}%>,
    devtool: <%=extension('webpack-config.*', 'devtool').filter(v => v.trim() != '')[0] || {}%>,
    resolve: <%=extension('webpack-config.*', 'resolve').filter(v => v.trim() != '')[0] || {}%>,
    optimization: {
<%=extension('webpack-config.*', 'optimization').filter(v => v.trim() != '').join('\n,')%>
    },
    plugins: [
<%=extension('webpack-config.*', 'plugins').filter(v => v.trim() != '').join('\n,')%>
    ],

    module: {
        rules: [
<%=extension('webpack-config.*', 'module-rules').filter(v => v.trim() != '').join('\n,')%>
        ]
    },

    target: <%=extension('webpack-config.*', 'target').filter(v => v.trim() != '')[0] || 'node'%>
};

// If ran with SHOW_CONFIG_ONLY=1|true, only show the config and exit cleanly
if (showConfigOnly) {
    console.log(chalk.black.bgYellow.bold('Showing Configuration Only:'));
    console.log(require('util').inspect(config, false, null));
    process.exit(0);
}

module.exports = config;