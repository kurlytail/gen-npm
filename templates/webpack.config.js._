/* eslint-disable no-console */

const fs = require('fs');
const path = require('path');
const webpack = require('webpack');
const chalk = require('chalk');
<%=extension('webpack-config.*', 'imports').filter(v => v.trim() != '').join('\n')%>


const isProd = process.env.NODE_ENV === 'production';
const isDebug = process.env.NODE_ENV === 'debug';
const isDist = isDebug || isProd ? '.min' : '';
const distPath = path.join(__dirname, 'dist');
const showConfigOnly = '1' === process.env.SHOW_CONFIG_ONLY || 'true' === process.env.SHOW_CONFIG_ONLY;

const config = {
    entry: {
        app: './src/js/index.js'
    },

    output: {
        filename: `[name]${isDist}.js`,
        path: distPath,
        pathinfo: !isProd,
        libraryTarget: 'var'
    },

    devtool: 'inline-source-map',

    resolve: {
        extensions: ['.js'],
        modules: ['node_modules', 'src']
    },

    plugins: [
<%=extension('webpack-config.*', 'plugins').filter(v => v.trim() != '').join('\n,')%>
    ],

    module: {
        rules: [
<%=extension('webpack-config.*', 'module-rules').filter(v => v.trim() != '').join('\n,')%>
        ]
    },

    target: <%=extension('webpack-config.*', 'target')[0]%>
};

if (isProd) {
    config.plugins.push(
        new UglifyEsPlugin({
            mangle: true,
            compress: true
        })
    );
}

// If ran with SHOW_CONFIG_ONLY=1|true, only show the config and exit cleanly
if (showConfigOnly) {
    console.log(chalk.black.bgYellow.bold('Showing Configuration Only:'));
    console.log(require('util').inspect(config, false, null));
    process.exit(0);
}

module.exports = config;